import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, LROperation, PaginationCallback, LocationsClient, LocationProtos } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Service for managing
 *  {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s,
 * @class
 * @memberof v1beta
 */
export declare class EvaluationServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    private _universeDomain;
    private _servicePath;
    private _log;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    locationsClient: LocationsClient;
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    evaluationServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of EvaluationServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new EvaluationServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint(): string;
    get universeDomain(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Gets a {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Full resource name of
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}, such as
     *   `projects/{project}/locations/{location}/evaluations/{evaluation}`.
     *
     *   If the caller does not have permission to access the
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}, regardless of
     *   whether or not it exists, a PERMISSION_DENIED error is returned.
     *
     *   If the requested
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation} does not
     *   exist, a NOT_FOUND error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta/evaluation_service.get_evaluation.js</caption>
     * region_tag:discoveryengine_v1beta_generated_EvaluationService_GetEvaluation_async
     */
    getEvaluation(request?: protos.google.cloud.discoveryengine.v1beta.IGetEvaluationRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1beta.IEvaluation,
        (protos.google.cloud.discoveryengine.v1beta.IGetEvaluationRequest | undefined),
        {} | undefined
    ]>;
    getEvaluation(request: protos.google.cloud.discoveryengine.v1beta.IGetEvaluationRequest, options: CallOptions, callback: Callback<protos.google.cloud.discoveryengine.v1beta.IEvaluation, protos.google.cloud.discoveryengine.v1beta.IGetEvaluationRequest | null | undefined, {} | null | undefined>): void;
    getEvaluation(request: protos.google.cloud.discoveryengine.v1beta.IGetEvaluationRequest, callback: Callback<protos.google.cloud.discoveryengine.v1beta.IEvaluation, protos.google.cloud.discoveryengine.v1beta.IGetEvaluationRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates a {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}.
     *
     * Upon creation, the evaluation will be automatically triggered and begin
     * execution.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource name, such as
     *   `projects/{project}/locations/{location}`.
     * @param {google.cloud.discoveryengine.v1beta.Evaluation} request.evaluation
     *   Required. The {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}
     *   to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta/evaluation_service.create_evaluation.js</caption>
     * region_tag:discoveryengine_v1beta_generated_EvaluationService_CreateEvaluation_async
     */
    createEvaluation(request?: protos.google.cloud.discoveryengine.v1beta.ICreateEvaluationRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1beta.IEvaluation, protos.google.cloud.discoveryengine.v1beta.ICreateEvaluationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createEvaluation(request: protos.google.cloud.discoveryengine.v1beta.ICreateEvaluationRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1beta.IEvaluation, protos.google.cloud.discoveryengine.v1beta.ICreateEvaluationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createEvaluation(request: protos.google.cloud.discoveryengine.v1beta.ICreateEvaluationRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1beta.IEvaluation, protos.google.cloud.discoveryengine.v1beta.ICreateEvaluationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createEvaluation()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta/evaluation_service.create_evaluation.js</caption>
     * region_tag:discoveryengine_v1beta_generated_EvaluationService_CreateEvaluation_async
     */
    checkCreateEvaluationProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1beta.Evaluation, protos.google.cloud.discoveryengine.v1beta.CreateEvaluationMetadata>>;
    /**
     * Gets a list of
     * {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent location resource name, such as
     *   `projects/{project}/locations/{location}`.
     *
     *   If the caller does not have permission to list
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s under this
     *   location, regardless of whether or not this location exists, a
     *   `PERMISSION_DENIED` error is returned.
     * @param {number} request.pageSize
     *   Maximum number of
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s to return. If
     *   unspecified, defaults to 100. The maximum allowed value is 1000. Values
     *   above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an `INVALID_ARGUMENT` error is returned.
     * @param {string} request.pageToken
     *   A page token
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationsResponse.next_page_token|ListEvaluationsResponse.next_page_token},
     *   received from a previous
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluations|EvaluationService.ListEvaluations}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluations|EvaluationService.ListEvaluations}
     *   must match the call that provided the page token. Otherwise, an
     *   `INVALID_ARGUMENT` error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listEvaluationsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEvaluations(request?: protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1beta.IEvaluation[],
        protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest | null,
        protos.google.cloud.discoveryengine.v1beta.IListEvaluationsResponse
    ]>;
    listEvaluations(request: protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, protos.google.cloud.discoveryengine.v1beta.IListEvaluationsResponse | null | undefined, protos.google.cloud.discoveryengine.v1beta.IEvaluation>): void;
    listEvaluations(request: protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, protos.google.cloud.discoveryengine.v1beta.IListEvaluationsResponse | null | undefined, protos.google.cloud.discoveryengine.v1beta.IEvaluation>): void;
    /**
     * Equivalent to `listEvaluations`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent location resource name, such as
     *   `projects/{project}/locations/{location}`.
     *
     *   If the caller does not have permission to list
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s under this
     *   location, regardless of whether or not this location exists, a
     *   `PERMISSION_DENIED` error is returned.
     * @param {number} request.pageSize
     *   Maximum number of
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s to return. If
     *   unspecified, defaults to 100. The maximum allowed value is 1000. Values
     *   above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an `INVALID_ARGUMENT` error is returned.
     * @param {string} request.pageToken
     *   A page token
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationsResponse.next_page_token|ListEvaluationsResponse.next_page_token},
     *   received from a previous
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluations|EvaluationService.ListEvaluations}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluations|EvaluationService.ListEvaluations}
     *   must match the call that provided the page token. Otherwise, an
     *   `INVALID_ARGUMENT` error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listEvaluationsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEvaluationsStream(request?: protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listEvaluations`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent location resource name, such as
     *   `projects/{project}/locations/{location}`.
     *
     *   If the caller does not have permission to list
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s under this
     *   location, regardless of whether or not this location exists, a
     *   `PERMISSION_DENIED` error is returned.
     * @param {number} request.pageSize
     *   Maximum number of
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}s to return. If
     *   unspecified, defaults to 100. The maximum allowed value is 1000. Values
     *   above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an `INVALID_ARGUMENT` error is returned.
     * @param {string} request.pageToken
     *   A page token
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationsResponse.next_page_token|ListEvaluationsResponse.next_page_token},
     *   received from a previous
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluations|EvaluationService.ListEvaluations}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluations|EvaluationService.ListEvaluations}
     *   must match the call that provided the page token. Otherwise, an
     *   `INVALID_ARGUMENT` error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta/evaluation_service.list_evaluations.js</caption>
     * region_tag:discoveryengine_v1beta_generated_EvaluationService_ListEvaluations_async
     */
    listEvaluationsAsync(request?: protos.google.cloud.discoveryengine.v1beta.IListEvaluationsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.discoveryengine.v1beta.IEvaluation>;
    /**
     * Gets a list of results for a given a
     * {@link protos.google.cloud.discoveryengine.v1beta.Evaluation|Evaluation}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.evaluation
     *   Required. The evaluation resource name, such as
     *   `projects/{project}/locations/{location}/evaluations/{evaluation}`.
     *
     *   If the caller does not have permission to list {@link protos.|EvaluationResult}
     *   under this evaluation, regardless of whether or not this evaluation
     *   set exists, a `PERMISSION_DENIED` error is returned.
     * @param {number} request.pageSize
     *   Maximum number of {@link protos.|EvaluationResult} to return. If unspecified,
     *   defaults to 100. The maximum allowed value is 1000. Values above 1000 will
     *   be coerced to 1000.
     *
     *   If this field is negative, an `INVALID_ARGUMENT` error is returned.
     * @param {string} request.pageToken
     *   A page token
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.next_page_token|ListEvaluationResultsResponse.next_page_token},
     *   received from a previous
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluationResults|EvaluationService.ListEvaluationResults}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluationResults|EvaluationService.ListEvaluationResults}
     *   must match the call that provided the page token. Otherwise, an
     *   `INVALID_ARGUMENT` error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.EvaluationResult|EvaluationResult}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listEvaluationResultsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEvaluationResults(request?: protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.IEvaluationResult[],
        protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest | null,
        protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsResponse
    ]>;
    listEvaluationResults(request: protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsResponse | null | undefined, protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.IEvaluationResult>): void;
    listEvaluationResults(request: protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsResponse | null | undefined, protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.IEvaluationResult>): void;
    /**
     * Equivalent to `listEvaluationResults`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.evaluation
     *   Required. The evaluation resource name, such as
     *   `projects/{project}/locations/{location}/evaluations/{evaluation}`.
     *
     *   If the caller does not have permission to list {@link protos.|EvaluationResult}
     *   under this evaluation, regardless of whether or not this evaluation
     *   set exists, a `PERMISSION_DENIED` error is returned.
     * @param {number} request.pageSize
     *   Maximum number of {@link protos.|EvaluationResult} to return. If unspecified,
     *   defaults to 100. The maximum allowed value is 1000. Values above 1000 will
     *   be coerced to 1000.
     *
     *   If this field is negative, an `INVALID_ARGUMENT` error is returned.
     * @param {string} request.pageToken
     *   A page token
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.next_page_token|ListEvaluationResultsResponse.next_page_token},
     *   received from a previous
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluationResults|EvaluationService.ListEvaluationResults}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluationResults|EvaluationService.ListEvaluationResults}
     *   must match the call that provided the page token. Otherwise, an
     *   `INVALID_ARGUMENT` error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.EvaluationResult|EvaluationResult} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listEvaluationResultsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEvaluationResultsStream(request?: protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listEvaluationResults`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.evaluation
     *   Required. The evaluation resource name, such as
     *   `projects/{project}/locations/{location}/evaluations/{evaluation}`.
     *
     *   If the caller does not have permission to list {@link protos.|EvaluationResult}
     *   under this evaluation, regardless of whether or not this evaluation
     *   set exists, a `PERMISSION_DENIED` error is returned.
     * @param {number} request.pageSize
     *   Maximum number of {@link protos.|EvaluationResult} to return. If unspecified,
     *   defaults to 100. The maximum allowed value is 1000. Values above 1000 will
     *   be coerced to 1000.
     *
     *   If this field is negative, an `INVALID_ARGUMENT` error is returned.
     * @param {string} request.pageToken
     *   A page token
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.next_page_token|ListEvaluationResultsResponse.next_page_token},
     *   received from a previous
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluationResults|EvaluationService.ListEvaluationResults}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.discoveryengine.v1beta.EvaluationService.ListEvaluationResults|EvaluationService.ListEvaluationResults}
     *   must match the call that provided the page token. Otherwise, an
     *   `INVALID_ARGUMENT` error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.EvaluationResult|EvaluationResult}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta/evaluation_service.list_evaluation_results.js</caption>
     * region_tag:discoveryengine_v1beta_generated_EvaluationService_ListEvaluationResults_async
     */
    listEvaluationResultsAsync(request?: protos.google.cloud.discoveryengine.v1beta.IListEvaluationResultsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.discoveryengine.v1beta.ListEvaluationResultsResponse.IEvaluationResult>;
    /**
     * Gets information about a location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Resource name for the location.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const [response] = await client.getLocation(request);
     * ```
     */
    getLocation(request: LocationProtos.google.cloud.location.IGetLocationRequest, options?: gax.CallOptions | Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>, callback?: Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>): Promise<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Lists information about the supported locations for this service. Returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   The resource that owns the locations collection, if applicable.
     * @param {string} request.filter
     *   The standard list filter.
     * @param {number} request.pageSize
     *   The standard list page size.
     * @param {string} request.pageToken
     *   The standard list page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const iterable = client.listLocationsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     * ```
     */
    listLocationsAsync(request: LocationProtos.google.cloud.location.IListLocationsRequest, options?: CallOptions): AsyncIterable<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Gets the latest state of a long-running operation.  Clients can use this
     * method to poll the operation result at intervals as recommended by the API
     * service.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     *   for the details.
     * @param {function(?Error, ?Object)=} callback
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing
     *   {@link google.longrunning.Operation | google.longrunning.Operation}.
     * @return {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     * {@link google.longrunning.Operation | google.longrunning.Operation}.
     * The promise has a method named "cancel" which cancels the ongoing API call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * const name = '';
     * const [response] = await client.getOperation({name});
     * // doThingsWith(response)
     * ```
     */
    getOperation(request: protos.google.longrunning.GetOperationRequest, optionsOrCallback?: gax.CallOptions | Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>): Promise<[protos.google.longrunning.Operation]>;
    /**
     * Lists operations that match the specified filter in the request. If the
     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
     *
     * For-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize -
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     *   details.
     * @returns {Object}
     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * for await (const response of client.listOperationsAsync(request));
     * // doThingsWith(response)
     * ```
     */
    listOperationsAsync(request: protos.google.longrunning.ListOperationsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.longrunning.IOperation>;
    /**
     * Starts asynchronous cancellation on a long-running operation.  The server
     * makes a best effort to cancel the operation, but success is not
     * guaranteed.  If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
     * {@link Operations.GetOperation} or
     * other methods to check whether the cancellation succeeded or whether the
     * operation completed despite cancellation. On successful cancellation,
     * the operation is not deleted; instead, it becomes an operation with
     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
     * 1, corresponding to `Code.CANCELLED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be cancelled.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     * details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.cancelOperation({name: ''});
     * ```
     */
    cancelOperation(request: protos.google.longrunning.CancelOperationRequest, optionsOrCallback?: gax.CallOptions | Callback<protos.google.longrunning.CancelOperationRequest, protos.google.protobuf.Empty, {} | undefined | null>, callback?: Callback<protos.google.longrunning.CancelOperationRequest, protos.google.protobuf.Empty, {} | undefined | null>): Promise<protos.google.protobuf.Empty>;
    /**
     * Deletes a long-running operation. This method indicates that the client is
     * no longer interested in the operation result. It does not cancel the
     * operation. If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be deleted.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     * for the details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.deleteOperation({name: ''});
     * ```
     */
    deleteOperation(request: protos.google.longrunning.DeleteOperationRequest, optionsOrCallback?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>): Promise<protos.google.protobuf.Empty>;
    /**
     * Return a fully-qualified engine resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @returns {string} Resource name string.
     */
    enginePath(project: string, location: string, collection: string, engine: string): string;
    /**
     * Parse the project from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromEngineName(engineName: string): string | number;
    /**
     * Parse the location from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromEngineName(engineName: string): string | number;
    /**
     * Parse the collection from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromEngineName(engineName: string): string | number;
    /**
     * Parse the engine from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromEngineName(engineName: string): string | number;
    /**
     * Return a fully-qualified evaluation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} evaluation
     * @returns {string} Resource name string.
     */
    evaluationPath(project: string, location: string, evaluation: string): string;
    /**
     * Parse the project from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromEvaluationName(evaluationName: string): string | number;
    /**
     * Parse the location from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromEvaluationName(evaluationName: string): string | number;
    /**
     * Parse the evaluation from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the evaluation.
     */
    matchEvaluationFromEvaluationName(evaluationName: string): string | number;
    /**
     * Return a fully-qualified groundingConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} grounding_config
     * @returns {string} Resource name string.
     */
    groundingConfigPath(project: string, location: string, groundingConfig: string): string;
    /**
     * Parse the project from GroundingConfig resource.
     *
     * @param {string} groundingConfigName
     *   A fully-qualified path representing GroundingConfig resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromGroundingConfigName(groundingConfigName: string): string | number;
    /**
     * Parse the location from GroundingConfig resource.
     *
     * @param {string} groundingConfigName
     *   A fully-qualified path representing GroundingConfig resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromGroundingConfigName(groundingConfigName: string): string | number;
    /**
     * Parse the grounding_config from GroundingConfig resource.
     *
     * @param {string} groundingConfigName
     *   A fully-qualified path representing GroundingConfig resource.
     * @returns {string} A string representing the grounding_config.
     */
    matchGroundingConfigFromGroundingConfigName(groundingConfigName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStore resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStorePath(project: string, location: string, collection: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreBranchDocument resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} branch
     * @param {string} document
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreBranchDocumentPath(project: string, location: string, collection: string, dataStore: string, branch: string, document: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the branch from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the branch.
     */
    matchBranchFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the document from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the document.
     */
    matchDocumentFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreBranchDocumentChunk resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} branch
     * @param {string} document
     * @param {string} chunk
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreBranchDocumentChunkPath(project: string, location: string, collection: string, dataStore: string, branch: string, document: string, chunk: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the branch from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the branch.
     */
    matchBranchFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the document from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the document.
     */
    matchDocumentFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the chunk from ProjectLocationCollectionDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the chunk.
     */
    matchChunkFromProjectLocationCollectionDataStoreBranchDocumentChunkName(projectLocationCollectionDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreControl resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} control
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreControlPath(project: string, location: string, collection: string, dataStore: string, control: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreControl resource.
     *
     * @param {string} projectLocationCollectionDataStoreControlName
     *   A fully-qualified path representing project_location_collection_data_store_control resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreControlName(projectLocationCollectionDataStoreControlName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreControl resource.
     *
     * @param {string} projectLocationCollectionDataStoreControlName
     *   A fully-qualified path representing project_location_collection_data_store_control resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreControlName(projectLocationCollectionDataStoreControlName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreControl resource.
     *
     * @param {string} projectLocationCollectionDataStoreControlName
     *   A fully-qualified path representing project_location_collection_data_store_control resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreControlName(projectLocationCollectionDataStoreControlName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreControl resource.
     *
     * @param {string} projectLocationCollectionDataStoreControlName
     *   A fully-qualified path representing project_location_collection_data_store_control resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreControlName(projectLocationCollectionDataStoreControlName: string): string | number;
    /**
     * Parse the control from ProjectLocationCollectionDataStoreControl resource.
     *
     * @param {string} projectLocationCollectionDataStoreControlName
     *   A fully-qualified path representing project_location_collection_data_store_control resource.
     * @returns {string} A string representing the control.
     */
    matchControlFromProjectLocationCollectionDataStoreControlName(projectLocationCollectionDataStoreControlName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreConversation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} conversation
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreConversationPath(project: string, location: string, collection: string, dataStore: string, conversation: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the conversation from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the conversation.
     */
    matchConversationFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreCustomTuningModel resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} custom_tuning_model
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreCustomTuningModelPath(project: string, location: string, collection: string, dataStore: string, customTuningModel: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationCollectionDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_collection_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreCustomTuningModelName(projectLocationCollectionDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationCollectionDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_collection_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreCustomTuningModelName(projectLocationCollectionDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationCollectionDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_collection_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreCustomTuningModelName(projectLocationCollectionDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationCollectionDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_collection_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreCustomTuningModelName(projectLocationCollectionDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the custom_tuning_model from ProjectLocationCollectionDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationCollectionDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_collection_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the custom_tuning_model.
     */
    matchCustomTuningModelFromProjectLocationCollectionDataStoreCustomTuningModelName(projectLocationCollectionDataStoreCustomTuningModelName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreDocumentProcessingConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreDocumentProcessingConfigPath(project: string, location: string, collection: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreDocumentProcessingConfigName(projectLocationCollectionDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreDocumentProcessingConfigName(projectLocationCollectionDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreDocumentProcessingConfigName(projectLocationCollectionDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreDocumentProcessingConfigName(projectLocationCollectionDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSchema resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} schema
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSchemaPath(project: string, location: string, collection: string, dataStore: string, schema: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the schema from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the schema.
     */
    matchSchemaFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreServingConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} serving_config
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreServingConfigPath(project: string, location: string, collection: string, dataStore: string, servingConfig: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreServingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreServingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_serving_config resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreServingConfigName(projectLocationCollectionDataStoreServingConfigName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreServingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreServingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_serving_config resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreServingConfigName(projectLocationCollectionDataStoreServingConfigName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreServingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreServingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_serving_config resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreServingConfigName(projectLocationCollectionDataStoreServingConfigName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreServingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreServingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_serving_config resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreServingConfigName(projectLocationCollectionDataStoreServingConfigName: string): string | number;
    /**
     * Parse the serving_config from ProjectLocationCollectionDataStoreServingConfig resource.
     *
     * @param {string} projectLocationCollectionDataStoreServingConfigName
     *   A fully-qualified path representing project_location_collection_data_store_serving_config resource.
     * @returns {string} A string representing the serving_config.
     */
    matchServingConfigFromProjectLocationCollectionDataStoreServingConfigName(projectLocationCollectionDataStoreServingConfigName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSession resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} session
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSessionPath(project: string, location: string, collection: string, dataStore: string, session: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSession resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionName
     *   A fully-qualified path representing project_location_collection_data_store_session resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSessionName(projectLocationCollectionDataStoreSessionName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSession resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionName
     *   A fully-qualified path representing project_location_collection_data_store_session resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSessionName(projectLocationCollectionDataStoreSessionName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSession resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionName
     *   A fully-qualified path representing project_location_collection_data_store_session resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSessionName(projectLocationCollectionDataStoreSessionName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSession resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionName
     *   A fully-qualified path representing project_location_collection_data_store_session resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSessionName(projectLocationCollectionDataStoreSessionName: string): string | number;
    /**
     * Parse the session from ProjectLocationCollectionDataStoreSession resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionName
     *   A fully-qualified path representing project_location_collection_data_store_session resource.
     * @returns {string} A string representing the session.
     */
    matchSessionFromProjectLocationCollectionDataStoreSessionName(projectLocationCollectionDataStoreSessionName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSessionAnswer resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} session
     * @param {string} answer
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSessionAnswerPath(project: string, location: string, collection: string, dataStore: string, session: string, answer: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_collection_data_store_session_answer resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSessionAnswerName(projectLocationCollectionDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_collection_data_store_session_answer resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSessionAnswerName(projectLocationCollectionDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_collection_data_store_session_answer resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSessionAnswerName(projectLocationCollectionDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_collection_data_store_session_answer resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSessionAnswerName(projectLocationCollectionDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the session from ProjectLocationCollectionDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_collection_data_store_session_answer resource.
     * @returns {string} A string representing the session.
     */
    matchSessionFromProjectLocationCollectionDataStoreSessionAnswerName(projectLocationCollectionDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the answer from ProjectLocationCollectionDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_collection_data_store_session_answer resource.
     * @returns {string} A string representing the answer.
     */
    matchAnswerFromProjectLocationCollectionDataStoreSessionAnswerName(projectLocationCollectionDataStoreSessionAnswerName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSiteSearchEngine resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSiteSearchEnginePath(project: string, location: string, collection: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSiteSearchEngineSitemap resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} sitemap
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSiteSearchEngineSitemapPath(project: string, location: string, collection: string, dataStore: string, sitemap: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSiteSearchEngineSitemapName(projectLocationCollectionDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSiteSearchEngineSitemapName(projectLocationCollectionDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSiteSearchEngineSitemapName(projectLocationCollectionDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSiteSearchEngineSitemapName(projectLocationCollectionDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the sitemap from ProjectLocationCollectionDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the sitemap.
     */
    matchSitemapFromProjectLocationCollectionDataStoreSiteSearchEngineSitemapName(projectLocationCollectionDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSiteSearchEngineTargetSite resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} target_site
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSiteSearchEngineTargetSitePath(project: string, location: string, collection: string, dataStore: string, targetSite: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the target_site from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the target_site.
     */
    matchTargetSiteFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionEngineControl resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @param {string} control
     * @returns {string} Resource name string.
     */
    projectLocationCollectionEngineControlPath(project: string, location: string, collection: string, engine: string, control: string): string;
    /**
     * Parse the project from ProjectLocationCollectionEngineControl resource.
     *
     * @param {string} projectLocationCollectionEngineControlName
     *   A fully-qualified path representing project_location_collection_engine_control resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionEngineControlName(projectLocationCollectionEngineControlName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionEngineControl resource.
     *
     * @param {string} projectLocationCollectionEngineControlName
     *   A fully-qualified path representing project_location_collection_engine_control resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionEngineControlName(projectLocationCollectionEngineControlName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionEngineControl resource.
     *
     * @param {string} projectLocationCollectionEngineControlName
     *   A fully-qualified path representing project_location_collection_engine_control resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionEngineControlName(projectLocationCollectionEngineControlName: string): string | number;
    /**
     * Parse the engine from ProjectLocationCollectionEngineControl resource.
     *
     * @param {string} projectLocationCollectionEngineControlName
     *   A fully-qualified path representing project_location_collection_engine_control resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromProjectLocationCollectionEngineControlName(projectLocationCollectionEngineControlName: string): string | number;
    /**
     * Parse the control from ProjectLocationCollectionEngineControl resource.
     *
     * @param {string} projectLocationCollectionEngineControlName
     *   A fully-qualified path representing project_location_collection_engine_control resource.
     * @returns {string} A string representing the control.
     */
    matchControlFromProjectLocationCollectionEngineControlName(projectLocationCollectionEngineControlName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionEngineConversation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @param {string} conversation
     * @returns {string} Resource name string.
     */
    projectLocationCollectionEngineConversationPath(project: string, location: string, collection: string, engine: string, conversation: string): string;
    /**
     * Parse the project from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the engine from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the conversation from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the conversation.
     */
    matchConversationFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionEngineServingConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @param {string} serving_config
     * @returns {string} Resource name string.
     */
    projectLocationCollectionEngineServingConfigPath(project: string, location: string, collection: string, engine: string, servingConfig: string): string;
    /**
     * Parse the project from ProjectLocationCollectionEngineServingConfig resource.
     *
     * @param {string} projectLocationCollectionEngineServingConfigName
     *   A fully-qualified path representing project_location_collection_engine_serving_config resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionEngineServingConfigName(projectLocationCollectionEngineServingConfigName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionEngineServingConfig resource.
     *
     * @param {string} projectLocationCollectionEngineServingConfigName
     *   A fully-qualified path representing project_location_collection_engine_serving_config resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionEngineServingConfigName(projectLocationCollectionEngineServingConfigName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionEngineServingConfig resource.
     *
     * @param {string} projectLocationCollectionEngineServingConfigName
     *   A fully-qualified path representing project_location_collection_engine_serving_config resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionEngineServingConfigName(projectLocationCollectionEngineServingConfigName: string): string | number;
    /**
     * Parse the engine from ProjectLocationCollectionEngineServingConfig resource.
     *
     * @param {string} projectLocationCollectionEngineServingConfigName
     *   A fully-qualified path representing project_location_collection_engine_serving_config resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromProjectLocationCollectionEngineServingConfigName(projectLocationCollectionEngineServingConfigName: string): string | number;
    /**
     * Parse the serving_config from ProjectLocationCollectionEngineServingConfig resource.
     *
     * @param {string} projectLocationCollectionEngineServingConfigName
     *   A fully-qualified path representing project_location_collection_engine_serving_config resource.
     * @returns {string} A string representing the serving_config.
     */
    matchServingConfigFromProjectLocationCollectionEngineServingConfigName(projectLocationCollectionEngineServingConfigName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionEngineSession resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @param {string} session
     * @returns {string} Resource name string.
     */
    projectLocationCollectionEngineSessionPath(project: string, location: string, collection: string, engine: string, session: string): string;
    /**
     * Parse the project from ProjectLocationCollectionEngineSession resource.
     *
     * @param {string} projectLocationCollectionEngineSessionName
     *   A fully-qualified path representing project_location_collection_engine_session resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionEngineSessionName(projectLocationCollectionEngineSessionName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionEngineSession resource.
     *
     * @param {string} projectLocationCollectionEngineSessionName
     *   A fully-qualified path representing project_location_collection_engine_session resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionEngineSessionName(projectLocationCollectionEngineSessionName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionEngineSession resource.
     *
     * @param {string} projectLocationCollectionEngineSessionName
     *   A fully-qualified path representing project_location_collection_engine_session resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionEngineSessionName(projectLocationCollectionEngineSessionName: string): string | number;
    /**
     * Parse the engine from ProjectLocationCollectionEngineSession resource.
     *
     * @param {string} projectLocationCollectionEngineSessionName
     *   A fully-qualified path representing project_location_collection_engine_session resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromProjectLocationCollectionEngineSessionName(projectLocationCollectionEngineSessionName: string): string | number;
    /**
     * Parse the session from ProjectLocationCollectionEngineSession resource.
     *
     * @param {string} projectLocationCollectionEngineSessionName
     *   A fully-qualified path representing project_location_collection_engine_session resource.
     * @returns {string} A string representing the session.
     */
    matchSessionFromProjectLocationCollectionEngineSessionName(projectLocationCollectionEngineSessionName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionEngineSessionAnswer resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @param {string} session
     * @param {string} answer
     * @returns {string} Resource name string.
     */
    projectLocationCollectionEngineSessionAnswerPath(project: string, location: string, collection: string, engine: string, session: string, answer: string): string;
    /**
     * Parse the project from ProjectLocationCollectionEngineSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionEngineSessionAnswerName
     *   A fully-qualified path representing project_location_collection_engine_session_answer resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionEngineSessionAnswerName(projectLocationCollectionEngineSessionAnswerName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionEngineSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionEngineSessionAnswerName
     *   A fully-qualified path representing project_location_collection_engine_session_answer resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionEngineSessionAnswerName(projectLocationCollectionEngineSessionAnswerName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionEngineSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionEngineSessionAnswerName
     *   A fully-qualified path representing project_location_collection_engine_session_answer resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionEngineSessionAnswerName(projectLocationCollectionEngineSessionAnswerName: string): string | number;
    /**
     * Parse the engine from ProjectLocationCollectionEngineSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionEngineSessionAnswerName
     *   A fully-qualified path representing project_location_collection_engine_session_answer resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromProjectLocationCollectionEngineSessionAnswerName(projectLocationCollectionEngineSessionAnswerName: string): string | number;
    /**
     * Parse the session from ProjectLocationCollectionEngineSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionEngineSessionAnswerName
     *   A fully-qualified path representing project_location_collection_engine_session_answer resource.
     * @returns {string} A string representing the session.
     */
    matchSessionFromProjectLocationCollectionEngineSessionAnswerName(projectLocationCollectionEngineSessionAnswerName: string): string | number;
    /**
     * Parse the answer from ProjectLocationCollectionEngineSessionAnswer resource.
     *
     * @param {string} projectLocationCollectionEngineSessionAnswerName
     *   A fully-qualified path representing project_location_collection_engine_session_answer resource.
     * @returns {string} A string representing the answer.
     */
    matchAnswerFromProjectLocationCollectionEngineSessionAnswerName(projectLocationCollectionEngineSessionAnswerName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStore resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationDataStorePath(project: string, location: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationDataStore resource.
     *
     * @param {string} projectLocationDataStoreName
     *   A fully-qualified path representing project_location_data_store resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreName(projectLocationDataStoreName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStore resource.
     *
     * @param {string} projectLocationDataStoreName
     *   A fully-qualified path representing project_location_data_store resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreName(projectLocationDataStoreName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStore resource.
     *
     * @param {string} projectLocationDataStoreName
     *   A fully-qualified path representing project_location_data_store resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreName(projectLocationDataStoreName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreBranchDocument resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} branch
     * @param {string} document
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreBranchDocumentPath(project: string, location: string, dataStore: string, branch: string, document: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the branch from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the branch.
     */
    matchBranchFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the document from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the document.
     */
    matchDocumentFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreBranchDocumentChunk resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} branch
     * @param {string} document
     * @param {string} chunk
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreBranchDocumentChunkPath(project: string, location: string, dataStore: string, branch: string, document: string, chunk: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreBranchDocumentChunkName(projectLocationDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreBranchDocumentChunkName(projectLocationDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreBranchDocumentChunkName(projectLocationDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the branch from ProjectLocationDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the branch.
     */
    matchBranchFromProjectLocationDataStoreBranchDocumentChunkName(projectLocationDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the document from ProjectLocationDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the document.
     */
    matchDocumentFromProjectLocationDataStoreBranchDocumentChunkName(projectLocationDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Parse the chunk from ProjectLocationDataStoreBranchDocumentChunk resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentChunkName
     *   A fully-qualified path representing project_location_data_store_branch_document_chunk resource.
     * @returns {string} A string representing the chunk.
     */
    matchChunkFromProjectLocationDataStoreBranchDocumentChunkName(projectLocationDataStoreBranchDocumentChunkName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreControl resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} control
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreControlPath(project: string, location: string, dataStore: string, control: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreControl resource.
     *
     * @param {string} projectLocationDataStoreControlName
     *   A fully-qualified path representing project_location_data_store_control resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreControlName(projectLocationDataStoreControlName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreControl resource.
     *
     * @param {string} projectLocationDataStoreControlName
     *   A fully-qualified path representing project_location_data_store_control resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreControlName(projectLocationDataStoreControlName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreControl resource.
     *
     * @param {string} projectLocationDataStoreControlName
     *   A fully-qualified path representing project_location_data_store_control resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreControlName(projectLocationDataStoreControlName: string): string | number;
    /**
     * Parse the control from ProjectLocationDataStoreControl resource.
     *
     * @param {string} projectLocationDataStoreControlName
     *   A fully-qualified path representing project_location_data_store_control resource.
     * @returns {string} A string representing the control.
     */
    matchControlFromProjectLocationDataStoreControlName(projectLocationDataStoreControlName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreConversation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} conversation
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreConversationPath(project: string, location: string, dataStore: string, conversation: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Parse the conversation from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the conversation.
     */
    matchConversationFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreCustomTuningModel resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} custom_tuning_model
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreCustomTuningModelPath(project: string, location: string, dataStore: string, customTuningModel: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreCustomTuningModelName(projectLocationDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreCustomTuningModelName(projectLocationDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreCustomTuningModelName(projectLocationDataStoreCustomTuningModelName: string): string | number;
    /**
     * Parse the custom_tuning_model from ProjectLocationDataStoreCustomTuningModel resource.
     *
     * @param {string} projectLocationDataStoreCustomTuningModelName
     *   A fully-qualified path representing project_location_data_store_custom_tuning_model resource.
     * @returns {string} A string representing the custom_tuning_model.
     */
    matchCustomTuningModelFromProjectLocationDataStoreCustomTuningModelName(projectLocationDataStoreCustomTuningModelName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreDocumentProcessingConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreDocumentProcessingConfigPath(project: string, location: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreDocumentProcessingConfigName(projectLocationDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreDocumentProcessingConfigName(projectLocationDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreDocumentProcessingConfig resource.
     *
     * @param {string} projectLocationDataStoreDocumentProcessingConfigName
     *   A fully-qualified path representing project_location_data_store_documentProcessingConfig resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreDocumentProcessingConfigName(projectLocationDataStoreDocumentProcessingConfigName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSchema resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} schema
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSchemaPath(project: string, location: string, dataStore: string, schema: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Parse the schema from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the schema.
     */
    matchSchemaFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreServingConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} serving_config
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreServingConfigPath(project: string, location: string, dataStore: string, servingConfig: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreServingConfig resource.
     *
     * @param {string} projectLocationDataStoreServingConfigName
     *   A fully-qualified path representing project_location_data_store_serving_config resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreServingConfigName(projectLocationDataStoreServingConfigName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreServingConfig resource.
     *
     * @param {string} projectLocationDataStoreServingConfigName
     *   A fully-qualified path representing project_location_data_store_serving_config resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreServingConfigName(projectLocationDataStoreServingConfigName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreServingConfig resource.
     *
     * @param {string} projectLocationDataStoreServingConfigName
     *   A fully-qualified path representing project_location_data_store_serving_config resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreServingConfigName(projectLocationDataStoreServingConfigName: string): string | number;
    /**
     * Parse the serving_config from ProjectLocationDataStoreServingConfig resource.
     *
     * @param {string} projectLocationDataStoreServingConfigName
     *   A fully-qualified path representing project_location_data_store_serving_config resource.
     * @returns {string} A string representing the serving_config.
     */
    matchServingConfigFromProjectLocationDataStoreServingConfigName(projectLocationDataStoreServingConfigName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSession resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} session
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSessionPath(project: string, location: string, dataStore: string, session: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSession resource.
     *
     * @param {string} projectLocationDataStoreSessionName
     *   A fully-qualified path representing project_location_data_store_session resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSessionName(projectLocationDataStoreSessionName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSession resource.
     *
     * @param {string} projectLocationDataStoreSessionName
     *   A fully-qualified path representing project_location_data_store_session resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSessionName(projectLocationDataStoreSessionName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSession resource.
     *
     * @param {string} projectLocationDataStoreSessionName
     *   A fully-qualified path representing project_location_data_store_session resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSessionName(projectLocationDataStoreSessionName: string): string | number;
    /**
     * Parse the session from ProjectLocationDataStoreSession resource.
     *
     * @param {string} projectLocationDataStoreSessionName
     *   A fully-qualified path representing project_location_data_store_session resource.
     * @returns {string} A string representing the session.
     */
    matchSessionFromProjectLocationDataStoreSessionName(projectLocationDataStoreSessionName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSessionAnswer resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} session
     * @param {string} answer
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSessionAnswerPath(project: string, location: string, dataStore: string, session: string, answer: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_data_store_session_answer resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSessionAnswerName(projectLocationDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_data_store_session_answer resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSessionAnswerName(projectLocationDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_data_store_session_answer resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSessionAnswerName(projectLocationDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the session from ProjectLocationDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_data_store_session_answer resource.
     * @returns {string} A string representing the session.
     */
    matchSessionFromProjectLocationDataStoreSessionAnswerName(projectLocationDataStoreSessionAnswerName: string): string | number;
    /**
     * Parse the answer from ProjectLocationDataStoreSessionAnswer resource.
     *
     * @param {string} projectLocationDataStoreSessionAnswerName
     *   A fully-qualified path representing project_location_data_store_session_answer resource.
     * @returns {string} A string representing the answer.
     */
    matchAnswerFromProjectLocationDataStoreSessionAnswerName(projectLocationDataStoreSessionAnswerName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSiteSearchEngine resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSiteSearchEnginePath(project: string, location: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSiteSearchEngineName(projectLocationDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSiteSearchEngineName(projectLocationDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSiteSearchEngineName(projectLocationDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSiteSearchEngineSitemap resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} sitemap
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSiteSearchEngineSitemapPath(project: string, location: string, dataStore: string, sitemap: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSiteSearchEngineSitemapName(projectLocationDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSiteSearchEngineSitemapName(projectLocationDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSiteSearchEngineSitemapName(projectLocationDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Parse the sitemap from ProjectLocationDataStoreSiteSearchEngineSitemap resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineSitemapName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_sitemap resource.
     * @returns {string} A string representing the sitemap.
     */
    matchSitemapFromProjectLocationDataStoreSiteSearchEngineSitemapName(projectLocationDataStoreSiteSearchEngineSitemapName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSiteSearchEngineTargetSite resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} target_site
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSiteSearchEngineTargetSitePath(project: string, location: string, dataStore: string, targetSite: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the target_site from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the target_site.
     */
    matchTargetSiteFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Return a fully-qualified sampleQuery resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} sample_query_set
     * @param {string} sample_query
     * @returns {string} Resource name string.
     */
    sampleQueryPath(project: string, location: string, sampleQuerySet: string, sampleQuery: string): string;
    /**
     * Parse the project from SampleQuery resource.
     *
     * @param {string} sampleQueryName
     *   A fully-qualified path representing SampleQuery resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromSampleQueryName(sampleQueryName: string): string | number;
    /**
     * Parse the location from SampleQuery resource.
     *
     * @param {string} sampleQueryName
     *   A fully-qualified path representing SampleQuery resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromSampleQueryName(sampleQueryName: string): string | number;
    /**
     * Parse the sample_query_set from SampleQuery resource.
     *
     * @param {string} sampleQueryName
     *   A fully-qualified path representing SampleQuery resource.
     * @returns {string} A string representing the sample_query_set.
     */
    matchSampleQuerySetFromSampleQueryName(sampleQueryName: string): string | number;
    /**
     * Parse the sample_query from SampleQuery resource.
     *
     * @param {string} sampleQueryName
     *   A fully-qualified path representing SampleQuery resource.
     * @returns {string} A string representing the sample_query.
     */
    matchSampleQueryFromSampleQueryName(sampleQueryName: string): string | number;
    /**
     * Return a fully-qualified sampleQuerySet resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} sample_query_set
     * @returns {string} Resource name string.
     */
    sampleQuerySetPath(project: string, location: string, sampleQuerySet: string): string;
    /**
     * Parse the project from SampleQuerySet resource.
     *
     * @param {string} sampleQuerySetName
     *   A fully-qualified path representing SampleQuerySet resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromSampleQuerySetName(sampleQuerySetName: string): string | number;
    /**
     * Parse the location from SampleQuerySet resource.
     *
     * @param {string} sampleQuerySetName
     *   A fully-qualified path representing SampleQuerySet resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromSampleQuerySetName(sampleQuerySetName: string): string | number;
    /**
     * Parse the sample_query_set from SampleQuerySet resource.
     *
     * @param {string} sampleQuerySetName
     *   A fully-qualified path representing SampleQuerySet resource.
     * @returns {string} A string representing the sample_query_set.
     */
    matchSampleQuerySetFromSampleQuerySetName(sampleQuerySetName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
